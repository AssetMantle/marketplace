// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: schema/ids/base/anyID.v1.proto

package com.ids;

public final class AnyIDV1Proto {
  private AnyIDV1Proto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ids_AnyID_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ids_AnyID_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\036schema/ids/base/anyID.v1.proto\022\003ids\032 s" +
      "chema/ids/base/assetID.v1.proto\032)schema/" +
      "ids/base/classificationID.v1.proto\032\037sche" +
      "ma/ids/base/dataID.v1.proto\032\037schema/ids/" +
      "base/hashID.v1.proto\032#schema/ids/base/id" +
      "entityID.v1.proto\032%schema/ids/base/maint" +
      "ainerID.v1.proto\032 schema/ids/base/orderI" +
      "D.v1.proto\032\037schema/ids/base/coinID.v1.pr" +
      "oto\032%schema/ids/base/anyOwnableID.v1.pro" +
      "to\032#schema/ids/base/propertyID.v1.proto\032" +
      " schema/ids/base/splitID.v1.proto\032!schem" +
      "a/ids/base/stringID.v1.proto\032\024gogoproto/" +
      "gogo.proto\"\302\004\n\005AnyID\022*\n\tasset_i_d\030\001 \001(\0132" +
      "\014.ids.AssetIDH\000R\007assetID\022E\n\022classificati" +
      "on_i_d\030\002 \001(\0132\025.ids.ClassificationIDH\000R\020c" +
      "lassificationID\022\'\n\010data_i_d\030\003 \001(\0132\013.ids." +
      "DataIDH\000R\006dataID\022\'\n\010hash_i_d\030\004 \001(\0132\013.ids" +
      ".HashIDH\000R\006hashID\0223\n\014identity_i_d\030\005 \001(\0132" +
      "\017.ids.IdentityIDH\000R\nidentityID\0229\n\016mainta" +
      "iner_i_d\030\006 \001(\0132\021.ids.MaintainerIDH\000R\014mai" +
      "ntainerID\022*\n\torder_i_d\030\007 \001(\0132\014.ids.Order" +
      "IDH\000R\007orderID\022:\n\017any_ownable_i_d\030\010 \001(\0132\021" +
      ".ids.AnyOwnableIDH\000R\014anyOwnableID\0223\n\014pro" +
      "perty_i_d\030\t \001(\0132\017.ids.PropertyIDH\000R\nprop" +
      "ertyID\022*\n\tsplit_i_d\030\n \001(\0132\014.ids.SplitIDH" +
      "\000R\007splitID\022-\n\nstring_i_d\030\013 \001(\0132\r.ids.Str" +
      "ingIDH\000R\010stringID:\004\210\240\037\000B\006\n\004implBs\n\007com.i" +
      "dsB\014AnyIDV1ProtoP\001Z.github.com/AssetMant" +
      "le/modules/schema/ids/base\242\002\003IXX\252\002\003Ids\312\002" +
      "\003Ids\342\002\017Ids\\GPBMetadata\352\002\003Idsb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.ids.AssetIDV1Proto.getDescriptor(),
          com.ids.ClassificationIDV1Proto.getDescriptor(),
          com.ids.DataIDV1Proto.getDescriptor(),
          com.ids.HashIDV1Proto.getDescriptor(),
          com.ids.IdentityIDV1Proto.getDescriptor(),
          com.ids.MaintainerIDV1Proto.getDescriptor(),
          com.ids.OrderIDV1Proto.getDescriptor(),
          com.ids.CoinIDV1Proto.getDescriptor(),
          com.ids.AnyOwnableIDV1Proto.getDescriptor(),
          com.ids.PropertyIDV1Proto.getDescriptor(),
          com.ids.SplitIDV1Proto.getDescriptor(),
          com.ids.StringIDV1Proto.getDescriptor(),
          com.gogoproto.GogoProto.getDescriptor(),
        });
    internal_static_ids_AnyID_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_ids_AnyID_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ids_AnyID_descriptor,
        new java.lang.String[] { "AssetID", "ClassificationID", "DataID", "HashID", "IdentityID", "MaintainerID", "OrderID", "AnyOwnableID", "PropertyID", "SplitID", "StringID", "Impl", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.gogoproto.GogoProto.goprotoGetters);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.ids.AssetIDV1Proto.getDescriptor();
    com.ids.ClassificationIDV1Proto.getDescriptor();
    com.ids.DataIDV1Proto.getDescriptor();
    com.ids.HashIDV1Proto.getDescriptor();
    com.ids.IdentityIDV1Proto.getDescriptor();
    com.ids.MaintainerIDV1Proto.getDescriptor();
    com.ids.OrderIDV1Proto.getDescriptor();
    com.ids.CoinIDV1Proto.getDescriptor();
    com.ids.AnyOwnableIDV1Proto.getDescriptor();
    com.ids.PropertyIDV1Proto.getDescriptor();
    com.ids.SplitIDV1Proto.getDescriptor();
    com.ids.StringIDV1Proto.getDescriptor();
    com.gogoproto.GogoProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

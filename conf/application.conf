# https://www.playframework.com/documentation/latest/Configuration
play.filters {
  headers {
    frameOptions = "sameorigin"
    xssProtection = "1; mode=block"
    contentTypeOptions = "nosniff"
    referrerPolicy = null
    contentSecurityPolicy = "default-src 'self' http://localhost:26657 http://localhost:1317 ws://localhost:9000 wss://*.assetmantle.one https://s3.amazonaws.com/keybase_processed_uploads/ https://demo.docusign.net/ resource://devtools/ https://fcm.googleapis.com/fcm/connect/subscribe *.assetmantle.one 'unsafe-inline' data:"
  }

  hosts {
    allowed = ["."]
  }
}

play.filter {
  enabled += play.filters.csrf.CSRFFilter
  enabled += play.filters.headers.SecurityHeadersFilter
  enabled += play.filters.hosts.AllowedHostsFilter
  enabled += play.filters.cors.CORSFilter
  enabled += play.filters.csp.CSPFilter
}

play.http {
    secret.key=${APPLICATION_SECRET}
    session.token.timeout=1800000
}

play.i18n.langs = ["en"]

play.log.lang = "en"

slick.dbs {
  default {
    profile = "slick.jdbc.PostgresProfile$"
    db {
      driver = "org.postgresql.Driver"
      url = "jdbc:postgresql://"${POSTGRES_URL}"/"${POSTGRES_DB}
      user = ${POSTGRES_USER}
      password = ${POSTGRES_PASSWORD}
    }
  }
}

play.evolutions {
  db {
    default {
      enabled = true
      schema = "public"
      autocommit = true
      useLocks = true
      autoApply = true
      autoApplyDowns = true
    }
  }
}


# env config
webApp {
    url = ${SITE_URL}
    cacheDuration = 5500
}

amazonS3 {
    bucketName = ${AMAZON_S3_BUCKET_NAME}
    region = ${AMAZON_S3_REGION}
    accessKeyID = ${AMAZON_S3_ACCESS_KEY_ID}
    secretKey = ${AMAZON_S3_SECRET_KEY}
    maxMultiPartUploadTime = 7 # number of days
}

ipfs {
    jwtToken = ${IPFS_JWT}
    endPoint = ${IPFS_END_POINT}
}
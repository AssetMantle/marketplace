# Routes
# This file defines all application routes (Higher priority routes first)
# https://www.playframework.com/documentation/latest/ScalaRouting
# ~~~~

# An example controller showing a sample home page
# GET        /                                           controllers.HomeController.index()

# Map static resources from the /public folder to the /assets URL path
GET         /assets/*file                                     controllers.Assets.versioned(path="/public", file: Asset)
GET         /javascriptRoutes                                 controllers.JavaScriptRoutesController.javascriptRoutes
GET         /firebase-messaging-sw.js                         controllers.Assets.at(path="/public/javascripts/firebase", file="firebase-messaging-sw.js")

# Index
GET         /                                                 controllers.IndexController.index()
GET         /sitemap.xml                                          controllers.IndexController.sitemap()

GET         /signUp                                           controllers.AccountController.signUpForm()
POST        /signUp                                           controllers.AccountController.signUp()

GET         /checkUsernameAvailable                           controllers.AccountController.checkUsernameAvailable(username: String)

GET         /verifyWalletMnemonicso                           controllers.AccountController.verifyWalletMnemonicsForm()
POST        /verifyWalletMnemonics                            controllers.AccountController.verifyWalletMnemonics()

GET         /signInWithCallback                               controllers.AccountController.signInWithCallbackForm(callbackUrl: String ?= "/")
POST        /signInWithCallback                               controllers.AccountController.signInWithCallback()

GET         /signOut                                          controllers.AccountController.signOutForm()
POST        /signOut                                          controllers.AccountController.signOut()

GET         /forgetPassword                                   controllers.AccountController.forgetPasswordForm()
POST        /forgetPassword                                   controllers.AccountController.forgetPassword()

GET         /changePassword                                   controllers.AccountController.changePasswordForm()
POST        /changePassword                                   controllers.AccountController.changePassword()

GET         /migrateWalletToKey                               controllers.AccountController.migrateWalletToKeyForm()
POST        /migrateWalletToKey                               controllers.AccountController.migrateWalletToKey()

GET         /changeActiveKey                                  controllers.AccountController.changeActiveKey(address: String)

GET         /collections/:category                            controllers.CollectionController.viewCollections(category: String)
GET         /collection/:id                                   controllers.CollectionController.viewCollection(id: String)
GET         /collectionsSection                               controllers.CollectionController.collectionsSection(category: String)
GET         /collectionList                                   controllers.CollectionController.collectionList(category: String)
GET         /collectionsPerPage                               controllers.CollectionController.collectionsPerPage(category: String,pageNumber: Int)
GET         /collectionNFTs                                   controllers.CollectionController.collectionNFTs(id: String)
GET         /collectionNFTsPerPage                            controllers.CollectionController.collectionNFTsPerPage(id: String, pageNumber: Int)
GET         /collectionInfo                                   controllers.CollectionController.info(id: String)
GET         /created                                          controllers.CollectionController.createdSection(accountId: String)
GET         /createdCollectionPerPage                         controllers.CollectionController.createdCollectionPerPage(accountId: String, pageNumber: Int)

GET         /createCollection                                 controllers.CollectionController.createForm()
POST        /createCollection                                 controllers.CollectionController.create()
GET         /editCollection                                   controllers.CollectionController.editForm(id: String)
POST        /editCollection                                   controllers.CollectionController.edit()
GET         /defineProperties                                 controllers.CollectionController.definePropertiesForm(id: String)
POST        /defineProperties                                 controllers.CollectionController.defineProperties()

GET         /uploadCollectionFileForm                         controllers.CollectionController.uploadCollectionFileForm(id: String, documentType: String)
POST        /storeCollectionFile                              controllers.CollectionController.storeCollectionFile(id: String, documentType: String)
GET         /uploadCollectionFile                             controllers.CollectionController.uploadCollectionFile(id: String, documentType: String, name: String)

GET         /wishlistSection                                  controllers.WishlistController.wishlistSection(accountId: String)
GET         /wishListCollectionPerPage                        controllers.WishlistController.collectionPerPage(accountId: String, pageNumber: Int)
GET         /wishListCollectionNFTs                           controllers.WishlistController.collectionNFTs(accountId: String, collectionId: String)
GET         /profile/:accountId/WISHLIST/:collectionId        controllers.WishlistController.viewCollectionNFTs(accountId: String, collectionId: String)
GET         /wishListNFTsPerPage                              controllers.WishlistController.collectionNFTsPerPage(accountId: String, collectionId: String, pageNumber: Int)

GET         /nft/:nftId                                       controllers.NFTController.viewNFT( nftId: String)
GET         /nftDetails                                       controllers.NFTController.details( nftId: String)
GET         /nftInfo                                          controllers.NFTController.info( nftId: String)
GET         /nftFile                                          controllers.NFTController.file( nftId: String)

GET         /settings                                         controllers.SettingController.viewSettings()
GET         /profileSettings                                  controllers.SettingController.settings()
GET         /walletPopup                                      controllers.SettingController.walletPopup()

GET         /addNewKey                                        controllers.SettingController.addNewKey()

GET         /addManagedKey                                    controllers.SettingController.addManagedKeyForm()
POST        /addManagedKey                                    controllers.SettingController.addManagedKey()

GET         /addUnmanagedKey                                  controllers.SettingController.addUnmanagedKeyForm()
POST        /addUnmanagedKey                                  controllers.SettingController.addUnmanagedKey()

GET         /changeKeyName                                    controllers.SettingController.changeKeyNameForm(address: String)
POST        /changeKeyName                                    controllers.SettingController.changeKeyName()

GET         /viewMnemonics                                    controllers.SettingController.viewMnemonicsForm(address: String)
POST        /viewMnemonics                                    controllers.SettingController.viewMnemonics()

GET         /deleteKey                                        controllers.SettingController.deleteKeyForm(address: String)
POST        /deleteKey                                        controllers.SettingController.deleteKey()

GET         /walletBalance                                    controllers.SettingController.walletBalance(address: String)

GET         /addToWishList                                    controllers.NFTController.addToWishList(nftId: String)
GET         /deleteFromWishList                               controllers.NFTController.deleteFromWishList(nftId: String)
GET         /likesCounter                                     controllers.NFTController.likesCounter(nftId: String)

GET         /defaultProfile                                   controllers.ProfileController.viewDefaultProfile()
GET         /profile/:accountId/:activeTab                    controllers.ProfileController.viewProfile(accountId: String, activeTab: String)
GET         /profile/:accountId                               controllers.ProfileController.viewProfile(accountId: String, activeTab: String ?= "CREATED")
GET         /profileSection                                   controllers.ProfileController.profile(accountId: String, activeTab: String)
GET         /profileInfoCard                                  controllers.ProfileController.profileInfoCard(accountId: String)
GET         /profileActivityCard                              controllers.ProfileController.profileActivityCard(accountId: String)

GET         /whitelistSection                                 controllers.WhitelistController.whitelistSection()
GET         /createdWhitelists                                controllers.WhitelistController.createdWhitelists()
GET         /createdWhitelistsPerPage                         controllers.WhitelistController.createdWhitelistsPerPage(pageNumber: Int)
GET         /joinedWhitelists                                 controllers.WhitelistController.joinedWhitelists()
GET         /joinedWhitelistsPerPage                          controllers.WhitelistController.joinedWhitelistsPerPage(pageNumber: Int)
GET         /whitelistTotalMembers                            controllers.WhitelistController.whitelistTotalMembers(id: String)

GET         /createWhitelist                                  controllers.WhitelistController.createWhitelistForm()
POST        /createWhitelist                                  controllers.WhitelistController.createWhitelist()

GET         /editWhitelist                                    controllers.WhitelistController.editWhitelistForm(whitelistId: String)
POST        /editWhitelist                                    controllers.WhitelistController.editWhitelist()

# Should be not changed it will be public
GET         /acceptWhitelistInvite/:whitelistId               controllers.WhitelistController.viewAcceptInviteDetails(whitelistId: String)
GET         /whitelistInviteDetails                           controllers.WhitelistController.acceptInviteDetails(whitelistId: String)
GET         /acceptWhitelistInvite                            controllers.WhitelistController.acceptInvite(whitelistId: String)
GET         /leaveWhitelistDetails                            controllers.WhitelistController.leaveWhitelistDetails(whitelistId: String)
GET         /leaveWhitelist                                   controllers.WhitelistController.leaveWhitelist(whitelistId: String)

#GET         /changeManagedToUnmanaged        controllers.ProfileController.changeManagedToUnmanagedForm(address: String)
#POST        /changeManagedToUnmanaged        controllers.ProfileController.changeManagedToUnmanaged()

GET         /gasTokenPrice                                    controllers.BlockchainTransactionController.gasTokenPrice()
GET         /sendCoin                                         controllers.BlockchainTransactionController.sendCoinForm(fromAddress: String)
POST        /sendCoin                                         controllers.BlockchainTransactionController.sendCoin()